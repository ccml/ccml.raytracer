Background:
Given p1 ← point(0, 1, 0)
And p2 ← point(-1, 0, 0)
And p3 ← point(1, 0, 0)
And n1 ← vector(0, 1, 0)
And n2 ← vector(-1, 0, 0)
And n3 ← vector(1, 0, 0)
When tri ← smooth_triangle(p1, p2, p3, n1, n2, n3)

Scenario: Constructing a smooth triangle
Then tri.p1 = p1
And tri.p2 = p2
And tri.p3 = p3
And tri.n1 = n1
And tri.n2 = n2
And tri.n3 = n3

Scenario: An intersection can encapsulate `u` and `v`
Given s ← triangle(point(0, 1, 0), point(-1, 0, 0), point(1, 0, 0))
When i ← intersection_with_uv(3.5, s, 0.2, 0.4)
Then i.u = 0.2
And i.v = 0.4

Scenario: An intersection with a smooth triangle stores u/v
When r ← ray(point(-0.2, 0.3, -2), vector(0, 0, 1))
And xs ← local_intersect(tri, r)
Then xs[0].u = 0.45
And xs[0].v = 0.25

Scenario: A smooth triangle uses u/v to interpolate the normal
When i ← intersection_with_uv(1, tri, 0.45, 0.25)
And n ← normal_at(tri, point(0, 0, 0), i)
Then n = vector(-0.5547, 0.83205, 0)

Scenario: Preparing the normal on a smooth triangle
When i ← intersection_with_uv(1, tri, 0.45, 0.25)
And r ← ray(point(-0.2, 0.3, -2), vector(0, 0, 1))
And xs ← intersections(i)
And comps ← prepare_computations(i, r, xs)
Then comps.normalv = vector(-0.5547, 0.83205, 0)

Scenario: Vertex normal records
Given file ← a file containing:
"""
vn 0 0 1
vn 0.707 0 -0.707
vn 1 2 3
"""
When parser ← parse_obj_file(file)
Then parser.normals[1] = vector(0, 0, 1)
And parser.normals[2] = vector(0.707, 0, -0.707)
And parser.normals[3] = vector(1, 2, 3)

Scenario: Faces with normals
Given file ← a file containing:
"""
v 0 1 0
v -1 0 0
v 1 0 0
vn -1 0 0
vn 1 0 0
vn 0 1 0
f 1//3 2//1 3//2
f 1/0/3 2/102/1 3/14/2
"""
When parser ← parse_obj_file(file)
And g ← parser.default_group
And t1 ← first child of g
And t2 ← second child of g
Then t1.p1 = parser.vertices[1]
And t1.p2 = parser.vertices[2]
And t1.p3 = parser.vertices[3]
And t1.n1 = parser.normals[3]
And t1.n2 = parser.normals[1]
And t1.n3 = parser.normals[2]
And t2 = t1
